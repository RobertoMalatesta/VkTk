;;; This file was automatically generated by SWIG (http://www.swig.org).
;;; Version 3.0.12
;;;
;;; Do not make changes to this file unless you know what you are doing--modify
;;; the SWIG interface file instead.

(cl:in-package :imgui)

;;;SWIG wrapper code starts here

(cl:defmacro defanonenum (cl:&body enums)
   "Converts anonymous enums to defconstants."
  `(cl:progn ,@(cl:loop for value in enums
                        for index cl:= 0 then (cl:1+ index)
                        when (cl:listp value) do (cl:setf index (cl:second value)
                                                          value (cl:first value))
                        collect `(cl:defconstant ,value ,index))))

;;;SWIG wrapper code ends here


(cffi:defcstruct ImVec2
	(x :float)
	(y :float))

(cffi:defcstruct ImVec4
	(x :float)
	(y :float)
	(z :float)
	(w :float))

(defanonenum 
	(ImGuiWindowFlags_NoTitleBar #.(cl:ash 1 0))
	(ImGuiWindowFlags_NoResize #.(cl:ash 1 1))
	(ImGuiWindowFlags_NoMove #.(cl:ash 1 2))
	(ImGuiWindowFlags_NoScrollbar #.(cl:ash 1 3))
	(ImGuiWindowFlags_NoScrollWithMouse #.(cl:ash 1 4))
	(ImGuiWindowFlags_NoCollapse #.(cl:ash 1 5))
	(ImGuiWindowFlags_AlwaysAutoResize #.(cl:ash 1 6))
	(ImGuiWindowFlags_NoSavedSettings #.(cl:ash 1 8))
	(ImGuiWindowFlags_NoInputs #.(cl:ash 1 9))
	(ImGuiWindowFlags_MenuBar #.(cl:ash 1 10))
	(ImGuiWindowFlags_HorizontalScrollbar #.(cl:ash 1 11))
	(ImGuiWindowFlags_NoFocusOnAppearing #.(cl:ash 1 12))
	(ImGuiWindowFlags_NoBringToFrontOnFocus #.(cl:ash 1 13))
	(ImGuiWindowFlags_AlwaysVerticalScrollbar #.(cl:ash 1 14))
	(ImGuiWindowFlags_AlwaysHorizontalScrollbar #.(cl:ash 1 15))
	(ImGuiWindowFlags_AlwaysUseWindowPadding #.(cl:ash 1 16))
	(ImGuiWindowFlags_ResizeFromAnySide #.(cl:ash 1 17)))

(defanonenum 
	(ImGuiInputTextFlags_CharsDecimal #.(cl:ash 1 0))
	(ImGuiInputTextFlags_CharsHexadecimal #.(cl:ash 1 1))
	(ImGuiInputTextFlags_CharsUppercase #.(cl:ash 1 2))
	(ImGuiInputTextFlags_CharsNoBlank #.(cl:ash 1 3))
	(ImGuiInputTextFlags_AutoSelectAll #.(cl:ash 1 4))
	(ImGuiInputTextFlags_EnterReturnsTrue #.(cl:ash 1 5))
	(ImGuiInputTextFlags_CallbackCompletion #.(cl:ash 1 6))
	(ImGuiInputTextFlags_CallbackHistory #.(cl:ash 1 7))
	(ImGuiInputTextFlags_CallbackAlways #.(cl:ash 1 8))
	(ImGuiInputTextFlags_CallbackCharFilter #.(cl:ash 1 9))
	(ImGuiInputTextFlags_AllowTabInput #.(cl:ash 1 10))
	(ImGuiInputTextFlags_CtrlEnterForNewLine #.(cl:ash 1 11))
	(ImGuiInputTextFlags_NoHorizontalScroll #.(cl:ash 1 12))
	(ImGuiInputTextFlags_AlwaysInsertMode #.(cl:ash 1 13))
	(ImGuiInputTextFlags_ReadOnly #.(cl:ash 1 14))
	(ImGuiInputTextFlags_Password #.(cl:ash 1 15))
	(ImGuiInputTextFlags_NoUndoRedo #.(cl:ash 1 16)))

(defanonenum 
	(ImGuiTreeNodeFlags_Selected #.(cl:ash 1 0))
	(ImGuiTreeNodeFlags_Framed #.(cl:ash 1 1))
	(ImGuiTreeNodeFlags_AllowItemOverlap #.(cl:ash 1 2))
	(ImGuiTreeNodeFlags_NoTreePushOnOpen #.(cl:ash 1 3))
	(ImGuiTreeNodeFlags_NoAutoOpenOnLog #.(cl:ash 1 4))
	(ImGuiTreeNodeFlags_DefaultOpen #.(cl:ash 1 5))
	(ImGuiTreeNodeFlags_OpenOnDoubleClick #.(cl:ash 1 6))
	(ImGuiTreeNodeFlags_OpenOnArrow #.(cl:ash 1 7))
	(ImGuiTreeNodeFlags_Leaf #.(cl:ash 1 8))
	(ImGuiTreeNodeFlags_Bullet #.(cl:ash 1 9))
	(ImGuiTreeNodeFlags_FramePadding #.(cl:ash 1 10))
	(ImGuiTreeNodeFlags_CollapsingHeader (cl:logior ImGuiTreeNodeFlags_Framed ImGuiTreeNodeFlags_NoAutoOpenOnLog)))

(defanonenum 
	(ImGuiSelectableFlags_DontClosePopups #.(cl:ash 1 0))
	(ImGuiSelectableFlags_SpanAllColumns #.(cl:ash 1 1))
	(ImGuiSelectableFlags_AllowDoubleClick #.(cl:ash 1 2)))

(cffi:defcenum ImGuiComboFlags_
	(ImGuiComboFlags_PopupAlignLeft #.(cl:ash 1 0))
	(ImGuiComboFlags_HeightSmall #.(cl:ash 1 1))
	(ImGuiComboFlags_HeightRegular #.(cl:ash 1 2))
	(ImGuiComboFlags_HeightLarge #.(cl:ash 1 3))
	(ImGuiComboFlags_HeightLargest #.(cl:ash 1 4))
	(ImGuiComboFlags_HeightMask_ #.(cl:logior (cl:ash 1 1) (cl:ash 1 2) (cl:ash 1 3) (cl:ash 1 4))))

(cffi:defcenum ImGuiFocusedFlags_
	(ImGuiFocusedFlags_ChildWindows #.(cl:ash 1 0))
	(ImGuiFocusedFlags_RootWindow #.(cl:ash 1 1))
	(ImGuiFocusedFlags_RootAndChildWindows #.(cl:logior (cl:ash 1 1) (cl:ash 1 0))))

(cffi:defcenum ImGuiHoveredFlags_
	(ImGuiHoveredFlags_ChildWindows #.(cl:ash 1 0))
	(ImGuiHoveredFlags_RootWindow #.(cl:ash 1 1))
	(ImGuiHoveredFlags_AllowWhenBlockedByPopup #.(cl:ash 1 2))
	(ImGuiHoveredFlags_AllowWhenBlockedByActiveItem #.(cl:ash 1 4))
	(ImGuiHoveredFlags_AllowWhenOverlapped #.(cl:ash 1 5))
	(ImGuiHoveredFlags_RectOnly #.(cl:logior (cl:ash 1 2) (cl:ash 1 4) (cl:ash 1 5)))
	(ImGuiHoveredFlags_RootAndChildWindows #.(cl:logior (cl:ash 1 1) (cl:ash 1 0))))

(cffi:defcenum ImGuiDragDropFlags_
	(ImGuiDragDropFlags_SourceNoPreviewTooltip #.(cl:ash 1 0))
	(ImGuiDragDropFlags_SourceNoDisableHover #.(cl:ash 1 1))
	(ImGuiDragDropFlags_SourceNoHoldToOpenOthers #.(cl:ash 1 2))
	(ImGuiDragDropFlags_SourceAllowNullID #.(cl:ash 1 3))
	(ImGuiDragDropFlags_SourceExtern #.(cl:ash 1 4))
	(ImGuiDragDropFlags_AcceptBeforeDelivery #.(cl:ash 1 10))
	(ImGuiDragDropFlags_AcceptNoDrawDefaultRect #.(cl:ash 1 11))
	(ImGuiDragDropFlags_AcceptPeekOnly #.(cl:logior (cl:ash 1 10) (cl:ash 1 11))))

(defanonenum 
	ImGuiKey_Tab
	ImGuiKey_LeftArrow
	ImGuiKey_RightArrow
	ImGuiKey_UpArrow
	ImGuiKey_DownArrow
	ImGuiKey_PageUp
	ImGuiKey_PageDown
	ImGuiKey_Home
	ImGuiKey_End
	ImGuiKey_Delete
	ImGuiKey_Backspace
	ImGuiKey_Enter
	ImGuiKey_Escape
	ImGuiKey_A
	ImGuiKey_C
	ImGuiKey_V
	ImGuiKey_X
	ImGuiKey_Y
	ImGuiKey_Z
	ImGuiKey_COUNT)

(defanonenum 
	ImGuiCol_Text
	ImGuiCol_TextDisabled
	ImGuiCol_WindowBg
	ImGuiCol_ChildBg
	ImGuiCol_PopupBg
	ImGuiCol_Border
	ImGuiCol_BorderShadow
	ImGuiCol_FrameBg
	ImGuiCol_FrameBgHovered
	ImGuiCol_FrameBgActive
	ImGuiCol_TitleBg
	ImGuiCol_TitleBgActive
	ImGuiCol_TitleBgCollapsed
	ImGuiCol_MenuBarBg
	ImGuiCol_ScrollbarBg
	ImGuiCol_ScrollbarGrab
	ImGuiCol_ScrollbarGrabHovered
	ImGuiCol_ScrollbarGrabActive
	ImGuiCol_CheckMark
	ImGuiCol_SliderGrab
	ImGuiCol_SliderGrabActive
	ImGuiCol_Button
	ImGuiCol_ButtonHovered
	ImGuiCol_ButtonActive
	ImGuiCol_Header
	ImGuiCol_HeaderHovered
	ImGuiCol_HeaderActive
	ImGuiCol_Separator
	ImGuiCol_SeparatorHovered
	ImGuiCol_SeparatorActive
	ImGuiCol_ResizeGrip
	ImGuiCol_ResizeGripHovered
	ImGuiCol_ResizeGripActive
	ImGuiCol_CloseButton
	ImGuiCol_CloseButtonHovered
	ImGuiCol_CloseButtonActive
	ImGuiCol_PlotLines
	ImGuiCol_PlotLinesHovered
	ImGuiCol_PlotHistogram
	ImGuiCol_PlotHistogramHovered
	ImGuiCol_TextSelectedBg
	ImGuiCol_ModalWindowDarkening
	ImGuiCol_DragDropTarget
	ImGuiCol_COUNT)

(defanonenum 
	ImGuiStyleVar_Alpha
	ImGuiStyleVar_WindowPadding
	ImGuiStyleVar_WindowRounding
	ImGuiStyleVar_WindowBorderSize
	ImGuiStyleVar_WindowMinSize
	ImGuiStyleVar_ChildRounding
	ImGuiStyleVar_ChildBorderSize
	ImGuiStyleVar_PopupRounding
	ImGuiStyleVar_PopupBorderSize
	ImGuiStyleVar_FramePadding
	ImGuiStyleVar_FrameRounding
	ImGuiStyleVar_FrameBorderSize
	ImGuiStyleVar_ItemSpacing
	ImGuiStyleVar_ItemInnerSpacing
	ImGuiStyleVar_IndentSpacing
	ImGuiStyleVar_GrabMinSize
	ImGuiStyleVar_ButtonTextAlign
	ImGuiStyleVar_Count_)

(defanonenum 
	(ImGuiColorEditFlags_NoAlpha #.(cl:ash 1 1))
	(ImGuiColorEditFlags_NoPicker #.(cl:ash 1 2))
	(ImGuiColorEditFlags_NoOptions #.(cl:ash 1 3))
	(ImGuiColorEditFlags_NoSmallPreview #.(cl:ash 1 4))
	(ImGuiColorEditFlags_NoInputs #.(cl:ash 1 5))
	(ImGuiColorEditFlags_NoTooltip #.(cl:ash 1 6))
	(ImGuiColorEditFlags_NoLabel #.(cl:ash 1 7))
	(ImGuiColorEditFlags_NoSidePreview #.(cl:ash 1 8))
	(ImGuiColorEditFlags_AlphaBar #.(cl:ash 1 9))
	(ImGuiColorEditFlags_AlphaPreview #.(cl:ash 1 10))
	(ImGuiColorEditFlags_AlphaPreviewHalf #.(cl:ash 1 11))
	(ImGuiColorEditFlags_HDR #.(cl:ash 1 12))
	(ImGuiColorEditFlags_RGB #.(cl:ash 1 13))
	(ImGuiColorEditFlags_HSV #.(cl:ash 1 14))
	(ImGuiColorEditFlags_HEX #.(cl:ash 1 15))
	(ImGuiColorEditFlags_Uint8 #.(cl:ash 1 16))
	(ImGuiColorEditFlags_Float #.(cl:ash 1 17))
	(ImGuiColorEditFlags_PickerHueBar #.(cl:ash 1 18))
	(ImGuiColorEditFlags_PickerHueWheel #.(cl:ash 1 19)))

(defanonenum 
	(ImGuiMouseCursor_None #.-1)
	(ImGuiMouseCursor_Arrow #.0)
	ImGuiMouseCursor_TextInput
	ImGuiMouseCursor_Move
	ImGuiMouseCursor_ResizeNS
	ImGuiMouseCursor_ResizeEW
	ImGuiMouseCursor_ResizeNESW
	ImGuiMouseCursor_ResizeNWSE
	ImGuiMouseCursor_Count_)

(defanonenum 
	(ImGuiCond_Always #.(cl:ash 1 0))
	(ImGuiCond_Once #.(cl:ash 1 1))
	(ImGuiCond_FirstUseEver #.(cl:ash 1 2))
	(ImGuiCond_Appearing #.(cl:ash 1 3)))

(cffi:defcenum ImDrawCornerFlags_
	(ImDrawCornerFlags_TopLeft #.(cl:ash 1 0))
	(ImDrawCornerFlags_TopRight #.(cl:ash 1 1))
	(ImDrawCornerFlags_BotLeft #.(cl:ash 1 2))
	(ImDrawCornerFlags_BotRight #.(cl:ash 1 3))
	(ImDrawCornerFlags_Top #.(cl:logior (cl:ash 1 0) (cl:ash 1 1)))
	(ImDrawCornerFlags_Bot #.(cl:logior (cl:ash 1 2) (cl:ash 1 3)))
	(ImDrawCornerFlags_Left #.(cl:logior (cl:ash 1 0) (cl:ash 1 2)))
	(ImDrawCornerFlags_Right #.(cl:logior (cl:ash 1 1) (cl:ash 1 3)))
	(ImDrawCornerFlags_All #.#xF))

(cffi:defcenum ImDrawListFlags_
	(ImDrawListFlags_AntiAliasedLines #.(cl:ash 1 0))
	(ImDrawListFlags_AntiAliasedFill #.(cl:ash 1 1)))

(cffi:defcstruct ImGuiStyle
	(Alpha :float)
	(WindowPadding (:struct ImVec2))
	(WindowRounding :float)
	(WindowBorderSize :float)
	(WindowMinSize (:struct ImVec2))
	(WindowTitleAlign (:struct ImVec2))
	(ChildRounding :float)
	(ChildBorderSize :float)
	(PopupRounding :float)
	(PopupBorderSize :float)
	(FramePadding (:struct ImVec2))
	(FrameRounding :float)
	(FrameBorderSize :float)
	(ItemSpacing (:struct ImVec2))
	(ItemInnerSpacing (:struct ImVec2))
	(TouchExtraPadding (:struct ImVec2))
	(IndentSpacing :float)
	(ColumnsMinSpacing :float)
	(ScrollbarSize :float)
	(ScrollbarRounding :float)
	(GrabMinSize :float)
	(GrabRounding :float)
	(ButtonTextAlign (:struct ImVec2))
	(DisplayWindowPadding (:struct ImVec2))
	(DisplaySafeAreaPadding (:struct ImVec2))
	(AntiAliasedLines :pointer)
	(AntiAliasedFill :pointer)
	(CurveTessellationTol :float)
	(Colors :pointer :count #.ImGuiCol_COUNT))

(cffi:defcstruct ImGuiIO
	(DisplaySize (:struct ImVec2))
	(DeltaTime :float)
	(IniSavingRate :float)
	(IniFilename :string)
	(LogFilename :string)
	(MouseDoubleClickTime :float)
	(MouseDoubleClickMaxDist :float)
	(MouseDragThreshold :float)
	(KeyMap :pointer :count #.ImGuiKey_COUNT)
	(KeyRepeatDelay :float)
	(KeyRepeatRate :float)
	(UserData :pointer)
	(Fonts :pointer)
	(FontGlobalScale :float)
	(FontAllowUserScaling :pointer)
	(FontDefault :pointer)
	(DisplayFramebufferScale (:struct ImVec2))
	(DisplayVisibleMin (:struct ImVec2))
	(DisplayVisibleMax (:struct ImVec2))
	(OptMacOSXBehaviors :pointer)
	(OptCursorBlink :pointer)
	(RenderDrawListsFn :pointer)
	(GetClipboardTextFn :pointer)
	(SetClipboardTextFn :pointer)
	(ClipboardUserData :pointer)
	(MemAllocFn :pointer)
	(MemFreeFn :pointer)
	(ImeSetInputScreenPosFn :pointer)
	(ImeWindowHandle :pointer)
	(MousePos (:struct ImVec2))
	(MouseDown :pointer :count 5)
	(MouseWheel :float)
	(MouseDrawCursor :pointer)
	(KeyCtrl :pointer)
	(KeyShift :pointer)
	(KeyAlt :pointer)
	(KeySuper :pointer)
	(KeysDown :pointer :count 512)
	(InputCharacters :pointer :count #.(cl:1+ 16))
	(WantCaptureMouse :pointer)
	(WantCaptureKeyboard :pointer)
	(WantTextInput :pointer)
	(Framerate :float)
	(MetricsAllocs :int)
	(MetricsRenderVertices :int)
	(MetricsRenderIndices :int)
	(MetricsActiveWindows :int)
	(MouseDelta (:struct ImVec2))
	(MousePosPrev (:struct ImVec2))
	(MouseClicked :pointer :count 5)
	(MouseClickedPos :pointer :count 5)
	(MouseClickedTime :pointer :count 5)
	(MouseDoubleClicked :pointer :count 5)
	(MouseReleased :pointer :count 5)
	(MouseDownOwned :pointer :count 5)
	(MouseDownDuration :pointer :count 5)
	(MouseDownDurationPrev :pointer :count 5)
	(MouseDragMaxDistanceAbs :pointer :count 5)
	(MouseDragMaxDistanceSqr :pointer :count 5)
	(KeysDownDuration :pointer :count 512)
	(KeysDownDurationPrev :pointer :count 512))

(cffi:defcstruct ImGuiTextEditCallbackData
	(EventFlag :int)
	(Flags :int)
	(UserData :pointer)
	(ReadOnly :pointer)
	(EventChar :unsigned-short)
	(EventKey :int)
	(Buf :string)
	(BufTextLen :int)
	(BufSize :int)
	(BufDirty :pointer)
	(CursorPos :int)
	(SelectionStart :int)
	(SelectionEnd :int))

(cffi:defcstruct ImGuiSizeConstraintCallbackData
	(UserData :pointer)
	(Pos (:struct ImVec2))
	(CurrentSize (:struct ImVec2))
	(DesiredSize (:struct ImVec2)))

(cffi:defcstruct ImDrawCmd
	(ElemCount :unsigned-int)
	(ClipRect (:struct ImVec4))
	(TextureId :pointer)
	(UserCallback :pointer)
	(UserCallbackData :pointer))

(cffi:defcstruct ImDrawData
	(Valid :pointer)
	(CmdLists :pointer)
	(CmdListsCount :int)
	(TotalVtxCount :int)
	(TotalIdxCount :int))

(cffi:defcstruct ImDrawVert
	(pos (:struct ImVec2))
	(uv (:struct ImVec2))
	(col :unsigned-int))

(cffi:defcstruct ImFontConfig
	(FontData :pointer)
	(FontDataSize :int)
	(FontDataOwnedByAtlas :pointer)
	(FontNo :int)
	(SizePixels :float)
	(OversampleH :int)
	(OversampleV :int)
	(PixelSnapH :pointer)
	(GlyphExtraSpacing (:struct ImVec2))
	(GlyphOffset (:struct ImVec2))
	(GlyphRanges :pointer)
	(MergeMode :pointer)
	(RasterizerFlags :unsigned-int)
	(RasterizerMultiply :float)
	(Name :pointer :count 32)
	(DstFont :pointer))

(cffi:defcstruct ImGuiListClipper
	(StartPosY :float)
	(ItemsHeight :float)
	(ItemsCount :int)
	(StepNo :int)
	(DisplayStart :int)
	(DisplayEnd :int))

(cffi:defcstruct ImGuiPayload
	(Data :pointer)
	(DataSize :int)
	(SourceId :unsigned-int)
	(SourceParentId :unsigned-int)
	(DataFrameCount :int)
	(DataType :pointer :count #.(cl:1+ 8))
	(Preview :pointer)
	(Delivery :pointer))

(cffi:defcfun ("igGetIO" igGetIO) :pointer)

(cffi:defcfun ("igGetStyle" igGetStyle) :pointer)

(cffi:defcfun ("igGetDrawData" igGetDrawData) :pointer)

(cffi:defcfun ("igNewFrame" igNewFrame) :void)

(cffi:defcfun ("igRender" igRender) :void)

(cffi:defcfun ("igEndFrame" igEndFrame) :void)

(cffi:defcfun ("igShutdown" igShutdown) :void)

(cffi:defcfun ("igShowDemoWindow" igShowDemoWindow) :void
  (opened :pointer))

(cffi:defcfun ("igShowMetricsWindow" igShowMetricsWindow) :void
  (opened :pointer))

(cffi:defcfun ("igShowStyleEditor" igShowStyleEditor) :void
  (ref :pointer))

(cffi:defcfun ("igShowStyleSelector" igShowStyleSelector) :void
  (label :string))

(cffi:defcfun ("igShowFontSelector" igShowFontSelector) :void
  (label :string))

(cffi:defcfun ("igShowUserGuide" igShowUserGuide) :void)

(cffi:defcfun ("igBegin" igBegin) :pointer
  (name :string)
  (p_open :pointer)
  (flags :int))

(cffi:defcfun ("igEnd" igEnd) :void)

(cffi:defcfun ("igBeginChild" igBeginChild) :pointer
  (str_id :string)
  (size (:struct ImVec2))
  (border :pointer)
  (extra_flags :int))

(cffi:defcfun ("igBeginChildEx" igBeginChildEx) :pointer
  (id :unsigned-int)
  (size (:struct ImVec2))
  (border :pointer)
  (extra_flags :int))

(cffi:defcfun ("igEndChild" igEndChild) :void)

(cffi:defcfun ("igGetContentRegionMax" igGetContentRegionMax) :void
  (out :pointer))

(cffi:defcfun ("igGetContentRegionAvail" igGetContentRegionAvail) :void
  (out :pointer))

(cffi:defcfun ("igGetContentRegionAvailWidth" igGetContentRegionAvailWidth) :float)

(cffi:defcfun ("igGetWindowContentRegionMin" igGetWindowContentRegionMin) :void
  (out :pointer))

(cffi:defcfun ("igGetWindowContentRegionMax" igGetWindowContentRegionMax) :void
  (out :pointer))

(cffi:defcfun ("igGetWindowContentRegionWidth" igGetWindowContentRegionWidth) :float)

(cffi:defcfun ("igGetWindowDrawList" igGetWindowDrawList) :pointer)

(cffi:defcfun ("igGetWindowPos" igGetWindowPos) :void
  (out :pointer))

(cffi:defcfun ("igGetWindowSize" igGetWindowSize) :void
  (out :pointer))

(cffi:defcfun ("igGetWindowWidth" igGetWindowWidth) :float)

(cffi:defcfun ("igGetWindowHeight" igGetWindowHeight) :float)

(cffi:defcfun ("igIsWindowCollapsed" igIsWindowCollapsed) :pointer)

(cffi:defcfun ("igIsWindowAppearing" igIsWindowAppearing) :pointer)

(cffi:defcfun ("igSetWindowFontScale" igSetWindowFontScale) :void
  (scale :float))

(cffi:defcfun ("igSetNextWindowPos" igSetNextWindowPos) :void
  (pos (:struct ImVec2))
  (cond :int)
  (pivot (:struct ImVec2)))

(cffi:defcfun ("igSetNextWindowSize" igSetNextWindowSize) :void
  (size (:struct ImVec2))
  (cond :int))

(cffi:defcfun ("igSetNextWindowSizeConstraints" igSetNextWindowSizeConstraints) :void
  (size_min (:struct ImVec2))
  (size_max (:struct ImVec2))
  (custom_callback :pointer)
  (custom_callback_data :pointer))

(cffi:defcfun ("igSetNextWindowContentSize" igSetNextWindowContentSize) :void
  (size (:struct ImVec2)))

(cffi:defcfun ("igSetNextWindowCollapsed" igSetNextWindowCollapsed) :void
  (collapsed :pointer)
  (cond :int))

(cffi:defcfun ("igSetNextWindowFocus" igSetNextWindowFocus) :void)

(cffi:defcfun ("igSetWindowPos" igSetWindowPos) :void
  (pos (:struct ImVec2))
  (cond :int))

(cffi:defcfun ("igSetWindowSize" igSetWindowSize) :void
  (size (:struct ImVec2))
  (cond :int))

(cffi:defcfun ("igSetWindowCollapsed" igSetWindowCollapsed) :void
  (collapsed :pointer)
  (cond :int))

(cffi:defcfun ("igSetWindowFocus" igSetWindowFocus) :void)

(cffi:defcfun ("igSetWindowPosByName" igSetWindowPosByName) :void
  (name :string)
  (pos (:struct ImVec2))
  (cond :int))

(cffi:defcfun ("igSetWindowSize2" igSetWindowSize2) :void
  (name :string)
  (size (:struct ImVec2))
  (cond :int))

(cffi:defcfun ("igSetWindowCollapsed2" igSetWindowCollapsed2) :void
  (name :string)
  (collapsed :pointer)
  (cond :int))

(cffi:defcfun ("igSetWindowFocus2" igSetWindowFocus2) :void
  (name :string))

(cffi:defcfun ("igGetScrollX" igGetScrollX) :float)

(cffi:defcfun ("igGetScrollY" igGetScrollY) :float)

(cffi:defcfun ("igGetScrollMaxX" igGetScrollMaxX) :float)

(cffi:defcfun ("igGetScrollMaxY" igGetScrollMaxY) :float)

(cffi:defcfun ("igSetScrollX" igSetScrollX) :void
  (scroll_x :float))

(cffi:defcfun ("igSetScrollY" igSetScrollY) :void
  (scroll_y :float))

(cffi:defcfun ("igSetScrollHere" igSetScrollHere) :void
  (center_y_ratio :float))

(cffi:defcfun ("igSetScrollFromPosY" igSetScrollFromPosY) :void
  (pos_y :float)
  (center_y_ratio :float))

(cffi:defcfun ("igSetStateStorage" igSetStateStorage) :void
  (tree :pointer))

(cffi:defcfun ("igGetStateStorage" igGetStateStorage) :pointer)

(cffi:defcfun ("igPushFont" igPushFont) :void
  (font :pointer))

(cffi:defcfun ("igPopFont" igPopFont) :void)

(cffi:defcfun ("igPushStyleColorU32" igPushStyleColorU32) :void
  (idx :int)
  (col :unsigned-int))

(cffi:defcfun ("igPushStyleColor" igPushStyleColor) :void
  (idx :int)
  (col (:struct ImVec4)))

(cffi:defcfun ("igPopStyleColor" igPopStyleColor) :void
  (count :int))

(cffi:defcfun ("igPushStyleVar" igPushStyleVar) :void
  (idx :int)
  (val :float))

(cffi:defcfun ("igPushStyleVarVec" igPushStyleVarVec) :void
  (idx :int)
  (val (:struct ImVec2)))

(cffi:defcfun ("igPopStyleVar" igPopStyleVar) :void
  (count :int))

(cffi:defcfun ("igGetStyleColorVec4" igGetStyleColorVec4) :void
  (pOut :pointer)
  (idx :int))

(cffi:defcfun ("igGetFont" igGetFont) :pointer)

(cffi:defcfun ("igGetFontSize" igGetFontSize) :float)

(cffi:defcfun ("igGetFontTexUvWhitePixel" igGetFontTexUvWhitePixel) :void
  (pOut :pointer))

(cffi:defcfun ("igGetColorU32" igGetColorU32) :unsigned-int
  (idx :int)
  (alpha_mul :float))

(cffi:defcfun ("igGetColorU32Vec" igGetColorU32Vec) :unsigned-int
  (col :pointer))

(cffi:defcfun ("igGetColorU32U32" igGetColorU32U32) :unsigned-int
  (col :unsigned-int))

(cffi:defcfun ("igPushItemWidth" igPushItemWidth) :void
  (item_width :float))

(cffi:defcfun ("igPopItemWidth" igPopItemWidth) :void)

(cffi:defcfun ("igCalcItemWidth" igCalcItemWidth) :float)

(cffi:defcfun ("igPushTextWrapPos" igPushTextWrapPos) :void
  (wrap_pos_x :float))

(cffi:defcfun ("igPopTextWrapPos" igPopTextWrapPos) :void)

(cffi:defcfun ("igPushAllowKeyboardFocus" igPushAllowKeyboardFocus) :void
  (v :pointer))

(cffi:defcfun ("igPopAllowKeyboardFocus" igPopAllowKeyboardFocus) :void)

(cffi:defcfun ("igPushButtonRepeat" igPushButtonRepeat) :void
  (repeat :pointer))

(cffi:defcfun ("igPopButtonRepeat" igPopButtonRepeat) :void)

(cffi:defcfun ("igSeparator" igSeparator) :void)

(cffi:defcfun ("igSameLine" igSameLine) :void
  (pos_x :float)
  (spacing_w :float))

(cffi:defcfun ("igNewLine" igNewLine) :void)

(cffi:defcfun ("igSpacing" igSpacing) :void)

(cffi:defcfun ("igDummy" igDummy) :void
  (size :pointer))

(cffi:defcfun ("igIndent" igIndent) :void
  (indent_w :float))

(cffi:defcfun ("igUnindent" igUnindent) :void
  (indent_w :float))

(cffi:defcfun ("igBeginGroup" igBeginGroup) :void)

(cffi:defcfun ("igEndGroup" igEndGroup) :void)

(cffi:defcfun ("igGetCursorPos" igGetCursorPos) :void
  (pOut :pointer))

(cffi:defcfun ("igGetCursorPosX" igGetCursorPosX) :float)

(cffi:defcfun ("igGetCursorPosY" igGetCursorPosY) :float)

(cffi:defcfun ("igSetCursorPos" igSetCursorPos) :void
  (local_pos (:struct ImVec2)))

(cffi:defcfun ("igSetCursorPosX" igSetCursorPosX) :void
  (x :float))

(cffi:defcfun ("igSetCursorPosY" igSetCursorPosY) :void
  (y :float))

(cffi:defcfun ("igGetCursorStartPos" igGetCursorStartPos) :void
  (pOut :pointer))

(cffi:defcfun ("igGetCursorScreenPos" igGetCursorScreenPos) :void
  (pOut :pointer))

(cffi:defcfun ("igSetCursorScreenPos" igSetCursorScreenPos) :void
  (pos (:struct ImVec2)))

(cffi:defcfun ("igAlignTextToFramePadding" igAlignTextToFramePadding) :void)

(cffi:defcfun ("igGetTextLineHeight" igGetTextLineHeight) :float)

(cffi:defcfun ("igGetTextLineHeightWithSpacing" igGetTextLineHeightWithSpacing) :float)

(cffi:defcfun ("igGetFrameHeight" igGetFrameHeight) :float)

(cffi:defcfun ("igGetFrameHeightWithSpacing" igGetFrameHeightWithSpacing) :float)

(cffi:defcfun ("igColumns" igColumns) :void
  (count :int)
  (id :string)
  (border :pointer))

(cffi:defcfun ("igNextColumn" igNextColumn) :void)

(cffi:defcfun ("igGetColumnIndex" igGetColumnIndex) :int)

(cffi:defcfun ("igGetColumnWidth" igGetColumnWidth) :float
  (column_index :int))

(cffi:defcfun ("igSetColumnWidth" igSetColumnWidth) :void
  (column_index :int)
  (width :float))

(cffi:defcfun ("igGetColumnOffset" igGetColumnOffset) :float
  (column_index :int))

(cffi:defcfun ("igSetColumnOffset" igSetColumnOffset) :void
  (column_index :int)
  (offset_x :float))

(cffi:defcfun ("igGetColumnsCount" igGetColumnsCount) :int)

(cffi:defcfun ("igPushIDStr" igPushIDStr) :void
  (str_id :string))

(cffi:defcfun ("igPushIDStrRange" igPushIDStrRange) :void
  (str_begin :string)
  (str_end :string))

(cffi:defcfun ("igPushIDPtr" igPushIDPtr) :void
  (ptr_id :pointer))

(cffi:defcfun ("igPushIDInt" igPushIDInt) :void
  (int_id :int))

(cffi:defcfun ("igPopID" igPopID) :void)

(cffi:defcfun ("igGetIDStr" igGetIDStr) :unsigned-int
  (str_id :string))

(cffi:defcfun ("igGetIDStrRange" igGetIDStrRange) :unsigned-int
  (str_begin :string)
  (str_end :string))

(cffi:defcfun ("igGetIDPtr" igGetIDPtr) :unsigned-int
  (ptr_id :pointer))

(cffi:defcfun ("igTextUnformatted" igTextUnformatted) :void
  (text :string)
  (text_end :string))

(cffi:defcfun ("igText" igText) :void
  (fmt :string)
  cl:&rest)

(cffi:defcfun ("igTextV" igTextV) :void
  (fmt :string)
  (args :pointer))

(cffi:defcfun ("igTextColored" igTextColored) :void
  (col (:struct ImVec4))
  (fmt :string)
  cl:&rest)

(cffi:defcfun ("igTextColoredV" igTextColoredV) :void
  (col (:struct ImVec4))
  (fmt :string)
  (args :pointer))

(cffi:defcfun ("igTextDisabled" igTextDisabled) :void
  (fmt :string)
  cl:&rest)

(cffi:defcfun ("igTextDisabledV" igTextDisabledV) :void
  (fmt :string)
  (args :pointer))

(cffi:defcfun ("igTextWrapped" igTextWrapped) :void
  (fmt :string)
  cl:&rest)

(cffi:defcfun ("igTextWrappedV" igTextWrappedV) :void
  (fmt :string)
  (args :pointer))

(cffi:defcfun ("igLabelText" igLabelText) :void
  (label :string)
  (fmt :string)
  cl:&rest)

(cffi:defcfun ("igLabelTextV" igLabelTextV) :void
  (label :string)
  (fmt :string)
  (args :pointer))

(cffi:defcfun ("igBulletText" igBulletText) :void
  (fmt :string)
  cl:&rest)

(cffi:defcfun ("igBulletTextV" igBulletTextV) :void
  (fmt :string)
  (args :pointer))

(cffi:defcfun ("igBullet" igBullet) :void)

(cffi:defcfun ("igButton" igButton) :pointer
  (label :string)
  (size (:struct ImVec2)))

(cffi:defcfun ("igSmallButton" igSmallButton) :pointer
  (label :string))

(cffi:defcfun ("igInvisibleButton" igInvisibleButton) :pointer
  (str_id :string)
  (size (:struct ImVec2)))

(cffi:defcfun ("igImage" igImage) :void
  (user_texture_id :pointer)
  (size (:struct ImVec2))
  (uv0 (:struct ImVec2))
  (uv1 (:struct ImVec2))
  (tint_col (:struct ImVec4))
  (border_col (:struct ImVec4)))

(cffi:defcfun ("igImageButton" igImageButton) :pointer
  (user_texture_id :pointer)
  (size (:struct ImVec2))
  (uv0 (:struct ImVec2))
  (uv1 (:struct ImVec2))
  (frame_padding :int)
  (bg_col (:struct ImVec4))
  (tint_col (:struct ImVec4)))

(cffi:defcfun ("igCheckbox" igCheckbox) :pointer
  (label :string)
  (v :pointer))

(cffi:defcfun ("igCheckboxFlags" igCheckboxFlags) :pointer
  (label :string)
  (flags :pointer)
  (flags_value :unsigned-int))

(cffi:defcfun ("igRadioButtonBool" igRadioButtonBool) :pointer
  (label :string)
  (active :pointer))

(cffi:defcfun ("igRadioButton" igRadioButton) :pointer
  (label :string)
  (v :pointer)
  (v_button :int))

(cffi:defcfun ("igPlotLines" igPlotLines) :void
  (label :string)
  (values :pointer)
  (values_count :int)
  (values_offset :int)
  (overlay_text :string)
  (scale_min :float)
  (scale_max :float)
  (graph_size (:struct ImVec2))
  (stride :int))

(cffi:defcfun ("igPlotLines2" igPlotLines2) :void
  (label :string)
  (values_getter :pointer)
  (data :pointer)
  (values_count :int)
  (values_offset :int)
  (overlay_text :string)
  (scale_min :float)
  (scale_max :float)
  (graph_size (:struct ImVec2)))

(cffi:defcfun ("igPlotHistogram" igPlotHistogram) :void
  (label :string)
  (values :pointer)
  (values_count :int)
  (values_offset :int)
  (overlay_text :string)
  (scale_min :float)
  (scale_max :float)
  (graph_size (:struct ImVec2))
  (stride :int))

(cffi:defcfun ("igPlotHistogram2" igPlotHistogram2) :void
  (label :string)
  (values_getter :pointer)
  (data :pointer)
  (values_count :int)
  (values_offset :int)
  (overlay_text :string)
  (scale_min :float)
  (scale_max :float)
  (graph_size (:struct ImVec2)))

(cffi:defcfun ("igProgressBar" igProgressBar) :void
  (fraction :float)
  (size_arg :pointer)
  (overlay :string))

(cffi:defcfun ("igBeginCombo" igBeginCombo) :pointer
  (label :string)
  (preview_value :string)
  (flags :int))

(cffi:defcfun ("igEndCombo" igEndCombo) :void)

(cffi:defcfun ("igCombo" igCombo) :pointer
  (label :string)
  (current_item :pointer)
  (items :pointer)
  (items_count :int)
  (popup_max_height_in_items :int))

(cffi:defcfun ("igCombo2" igCombo2) :pointer
  (label :string)
  (current_item :pointer)
  (items_separated_by_zeros :string)
  (popup_max_height_in_items :int))

(cffi:defcfun ("igCombo3" igCombo3) :pointer
  (label :string)
  (current_item :pointer)
  (items_getter :pointer)
  (data :pointer)
  (items_count :int)
  (popup_max_height_in_items :int))

(cffi:defcfun ("igDragFloat" igDragFloat) :pointer
  (label :string)
  (v :pointer)
  (v_speed :float)
  (v_min :float)
  (v_max :float)
  (display_format :string)
  (power :float))

(cffi:defcfun ("igDragFloat2" igDragFloat2) :pointer
  (label :string)
  (v :pointer)
  (v_speed :float)
  (v_min :float)
  (v_max :float)
  (display_format :string)
  (power :float))

(cffi:defcfun ("igDragFloat3" igDragFloat3) :pointer
  (label :string)
  (v :pointer)
  (v_speed :float)
  (v_min :float)
  (v_max :float)
  (display_format :string)
  (power :float))

(cffi:defcfun ("igDragFloat4" igDragFloat4) :pointer
  (label :string)
  (v :pointer)
  (v_speed :float)
  (v_min :float)
  (v_max :float)
  (display_format :string)
  (power :float))

(cffi:defcfun ("igDragFloatRange2" igDragFloatRange2) :pointer
  (label :string)
  (v_current_min :pointer)
  (v_current_max :pointer)
  (v_speed :float)
  (v_min :float)
  (v_max :float)
  (display_format :string)
  (display_format_max :string)
  (power :float))

(cffi:defcfun ("igDragInt" igDragInt) :pointer
  (label :string)
  (v :pointer)
  (v_speed :float)
  (v_min :int)
  (v_max :int)
  (display_format :string))

(cffi:defcfun ("igDragInt2" igDragInt2) :pointer
  (label :string)
  (v :pointer)
  (v_speed :float)
  (v_min :int)
  (v_max :int)
  (display_format :string))

(cffi:defcfun ("igDragInt3" igDragInt3) :pointer
  (label :string)
  (v :pointer)
  (v_speed :float)
  (v_min :int)
  (v_max :int)
  (display_format :string))

(cffi:defcfun ("igDragInt4" igDragInt4) :pointer
  (label :string)
  (v :pointer)
  (v_speed :float)
  (v_min :int)
  (v_max :int)
  (display_format :string))

(cffi:defcfun ("igDragIntRange2" igDragIntRange2) :pointer
  (label :string)
  (v_current_min :pointer)
  (v_current_max :pointer)
  (v_speed :float)
  (v_min :int)
  (v_max :int)
  (display_format :string)
  (display_format_max :string))

(cffi:defcfun ("igInputText" igInputText) :pointer
  (label :string)
  (buf :string)
  (buf_size :pointer)
  (flags :int)
  (callback :pointer)
  (user_data :pointer))

(cffi:defcfun ("igInputTextMultiline" igInputTextMultiline) :pointer
  (label :string)
  (buf :string)
  (buf_size :pointer)
  (size (:struct ImVec2))
  (flags :int)
  (callback :pointer)
  (user_data :pointer))

(cffi:defcfun ("igInputFloat" igInputFloat) :pointer
  (label :string)
  (v :pointer)
  (step :float)
  (step_fast :float)
  (decimal_precision :int)
  (extra_flags :int))

(cffi:defcfun ("igInputFloat2" igInputFloat2) :pointer
  (label :string)
  (v :pointer)
  (decimal_precision :int)
  (extra_flags :int))

(cffi:defcfun ("igInputFloat3" igInputFloat3) :pointer
  (label :string)
  (v :pointer)
  (decimal_precision :int)
  (extra_flags :int))

(cffi:defcfun ("igInputFloat4" igInputFloat4) :pointer
  (label :string)
  (v :pointer)
  (decimal_precision :int)
  (extra_flags :int))

(cffi:defcfun ("igInputInt" igInputInt) :pointer
  (label :string)
  (v :pointer)
  (step :int)
  (step_fast :int)
  (extra_flags :int))

(cffi:defcfun ("igInputInt2" igInputInt2) :pointer
  (label :string)
  (v :pointer)
  (extra_flags :int))

(cffi:defcfun ("igInputInt3" igInputInt3) :pointer
  (label :string)
  (v :pointer)
  (extra_flags :int))

(cffi:defcfun ("igInputInt4" igInputInt4) :pointer
  (label :string)
  (v :pointer)
  (extra_flags :int))

(cffi:defcfun ("igSliderFloat" igSliderFloat) :pointer
  (label :string)
  (v :pointer)
  (v_min :float)
  (v_max :float)
  (display_format :string)
  (power :float))

(cffi:defcfun ("igSliderFloat2" igSliderFloat2) :pointer
  (label :string)
  (v :pointer)
  (v_min :float)
  (v_max :float)
  (display_format :string)
  (power :float))

(cffi:defcfun ("igSliderFloat3" igSliderFloat3) :pointer
  (label :string)
  (v :pointer)
  (v_min :float)
  (v_max :float)
  (display_format :string)
  (power :float))

(cffi:defcfun ("igSliderFloat4" igSliderFloat4) :pointer
  (label :string)
  (v :pointer)
  (v_min :float)
  (v_max :float)
  (display_format :string)
  (power :float))

(cffi:defcfun ("igSliderAngle" igSliderAngle) :pointer
  (label :string)
  (v_rad :pointer)
  (v_degrees_min :float)
  (v_degrees_max :float))

(cffi:defcfun ("igSliderInt" igSliderInt) :pointer
  (label :string)
  (v :pointer)
  (v_min :int)
  (v_max :int)
  (display_format :string))

(cffi:defcfun ("igSliderInt2" igSliderInt2) :pointer
  (label :string)
  (v :pointer)
  (v_min :int)
  (v_max :int)
  (display_format :string))

(cffi:defcfun ("igSliderInt3" igSliderInt3) :pointer
  (label :string)
  (v :pointer)
  (v_min :int)
  (v_max :int)
  (display_format :string))

(cffi:defcfun ("igSliderInt4" igSliderInt4) :pointer
  (label :string)
  (v :pointer)
  (v_min :int)
  (v_max :int)
  (display_format :string))

(cffi:defcfun ("igVSliderFloat" igVSliderFloat) :pointer
  (label :string)
  (size (:struct ImVec2))
  (v :pointer)
  (v_min :float)
  (v_max :float)
  (display_format :string)
  (power :float))

(cffi:defcfun ("igVSliderInt" igVSliderInt) :pointer
  (label :string)
  (size (:struct ImVec2))
  (v :pointer)
  (v_min :int)
  (v_max :int)
  (display_format :string))

(cffi:defcfun ("igColorEdit3" igColorEdit3) :pointer
  (label :string)
  (col :pointer)
  (flags :int))

(cffi:defcfun ("igColorEdit4" igColorEdit4) :pointer
  (label :string)
  (col :pointer)
  (flags :int))

(cffi:defcfun ("igColorPicker3" igColorPicker3) :pointer
  (label :string)
  (col :pointer)
  (flags :int))

(cffi:defcfun ("igColorPicker4" igColorPicker4) :pointer
  (label :string)
  (col :pointer)
  (flags :int)
  (ref_col :pointer))

(cffi:defcfun ("igColorButton" igColorButton) :pointer
  (desc_id :string)
  (col (:struct ImVec4))
  (flags :int)
  (size (:struct ImVec2)))

(cffi:defcfun ("igSetColorEditOptions" igSetColorEditOptions) :void
  (flags :int))

(cffi:defcfun ("igTreeNode" igTreeNode) :pointer
  (label :string))

(cffi:defcfun ("igTreeNodeStr" igTreeNodeStr) :pointer
  (str_id :string)
  (fmt :string)
  cl:&rest)

(cffi:defcfun ("igTreeNodePtr" igTreeNodePtr) :pointer
  (ptr_id :pointer)
  (fmt :string)
  cl:&rest)

(cffi:defcfun ("igTreeNodeStrV" igTreeNodeStrV) :pointer
  (str_id :string)
  (fmt :string)
  (args :pointer))

(cffi:defcfun ("igTreeNodePtrV" igTreeNodePtrV) :pointer
  (ptr_id :pointer)
  (fmt :string)
  (args :pointer))

(cffi:defcfun ("igTreeNodeEx" igTreeNodeEx) :pointer
  (label :string)
  (flags :int))

(cffi:defcfun ("igTreeNodeExStr" igTreeNodeExStr) :pointer
  (str_id :string)
  (flags :int)
  (fmt :string)
  cl:&rest)

(cffi:defcfun ("igTreeNodeExPtr" igTreeNodeExPtr) :pointer
  (ptr_id :pointer)
  (flags :int)
  (fmt :string)
  cl:&rest)

(cffi:defcfun ("igTreeNodeExV" igTreeNodeExV) :pointer
  (str_id :string)
  (flags :int)
  (fmt :string)
  (args :pointer))

(cffi:defcfun ("igTreeNodeExVPtr" igTreeNodeExVPtr) :pointer
  (ptr_id :pointer)
  (flags :int)
  (fmt :string)
  (args :pointer))

(cffi:defcfun ("igTreePushStr" igTreePushStr) :void
  (str_id :string))

(cffi:defcfun ("igTreePushPtr" igTreePushPtr) :void
  (ptr_id :pointer))

(cffi:defcfun ("igTreePop" igTreePop) :void)

(cffi:defcfun ("igTreeAdvanceToLabelPos" igTreeAdvanceToLabelPos) :void)

(cffi:defcfun ("igGetTreeNodeToLabelSpacing" igGetTreeNodeToLabelSpacing) :float)

(cffi:defcfun ("igSetNextTreeNodeOpen" igSetNextTreeNodeOpen) :void
  (opened :pointer)
  (cond :int))

(cffi:defcfun ("igCollapsingHeader" igCollapsingHeader) :pointer
  (label :string)
  (flags :int))

(cffi:defcfun ("igCollapsingHeaderEx" igCollapsingHeaderEx) :pointer
  (label :string)
  (p_open :pointer)
  (flags :int))

(cffi:defcfun ("igSelectable" igSelectable) :pointer
  (label :string)
  (selected :pointer)
  (flags :int)
  (size (:struct ImVec2)))

(cffi:defcfun ("igSelectableEx" igSelectableEx) :pointer
  (label :string)
  (p_selected :pointer)
  (flags :int)
  (size (:struct ImVec2)))

(cffi:defcfun ("igListBox" igListBox) :pointer
  (label :string)
  (current_item :pointer)
  (items :pointer)
  (items_count :int)
  (height_in_items :int))

(cffi:defcfun ("igListBox2" igListBox2) :pointer
  (label :string)
  (current_item :pointer)
  (items_getter :pointer)
  (data :pointer)
  (items_count :int)
  (height_in_items :int))

(cffi:defcfun ("igListBoxHeader" igListBoxHeader) :pointer
  (label :string)
  (size (:struct ImVec2)))

(cffi:defcfun ("igListBoxHeader2" igListBoxHeader2) :pointer
  (label :string)
  (items_count :int)
  (height_in_items :int))

(cffi:defcfun ("igListBoxFooter" igListBoxFooter) :void)

(cffi:defcfun ("igValueBool" igValueBool) :void
  (prefix :string)
  (b :pointer))

(cffi:defcfun ("igValueInt" igValueInt) :void
  (prefix :string)
  (v :int))

(cffi:defcfun ("igValueUInt" igValueUInt) :void
  (prefix :string)
  (v :unsigned-int))

(cffi:defcfun ("igValueFloat" igValueFloat) :void
  (prefix :string)
  (v :float)
  (float_format :string))

(cffi:defcfun ("igSetTooltip" igSetTooltip) :void
  (fmt :string)
  cl:&rest)

(cffi:defcfun ("igSetTooltipV" igSetTooltipV) :void
  (fmt :string)
  (args :pointer))

(cffi:defcfun ("igBeginTooltip" igBeginTooltip) :void)

(cffi:defcfun ("igEndTooltip" igEndTooltip) :void)

(cffi:defcfun ("igBeginMainMenuBar" igBeginMainMenuBar) :pointer)

(cffi:defcfun ("igEndMainMenuBar" igEndMainMenuBar) :void)

(cffi:defcfun ("igBeginMenuBar" igBeginMenuBar) :pointer)

(cffi:defcfun ("igEndMenuBar" igEndMenuBar) :void)

(cffi:defcfun ("igBeginMenu" igBeginMenu) :pointer
  (label :string)
  (enabled :pointer))

(cffi:defcfun ("igEndMenu" igEndMenu) :void)

(cffi:defcfun ("igMenuItem" igMenuItem) :pointer
  (label :string)
  (shortcut :string)
  (selected :pointer)
  (enabled :pointer))

(cffi:defcfun ("igMenuItemPtr" igMenuItemPtr) :pointer
  (label :string)
  (shortcut :string)
  (p_selected :pointer)
  (enabled :pointer))

(cffi:defcfun ("igOpenPopup" igOpenPopup) :void
  (str_id :string))

(cffi:defcfun ("igOpenPopupOnItemClick" igOpenPopupOnItemClick) :pointer
  (str_id :string)
  (mouse_button :int))

(cffi:defcfun ("igBeginPopup" igBeginPopup) :pointer
  (str_id :string))

(cffi:defcfun ("igBeginPopupModal" igBeginPopupModal) :pointer
  (name :string)
  (p_open :pointer)
  (extra_flags :int))

(cffi:defcfun ("igBeginPopupContextItem" igBeginPopupContextItem) :pointer
  (str_id :string)
  (mouse_button :int))

(cffi:defcfun ("igBeginPopupContextWindow" igBeginPopupContextWindow) :pointer
  (str_id :string)
  (mouse_button :int)
  (also_over_items :pointer))

(cffi:defcfun ("igBeginPopupContextVoid" igBeginPopupContextVoid) :pointer
  (str_id :string)
  (mouse_button :int))

(cffi:defcfun ("igEndPopup" igEndPopup) :void)

(cffi:defcfun ("igIsPopupOpen" igIsPopupOpen) :pointer
  (str_id :string))

(cffi:defcfun ("igCloseCurrentPopup" igCloseCurrentPopup) :void)

(cffi:defcfun ("igLogToTTY" igLogToTTY) :void
  (max_depth :int))

(cffi:defcfun ("igLogToFile" igLogToFile) :void
  (max_depth :int)
  (filename :string))

(cffi:defcfun ("igLogToClipboard" igLogToClipboard) :void
  (max_depth :int))

(cffi:defcfun ("igLogFinish" igLogFinish) :void)

(cffi:defcfun ("igLogButtons" igLogButtons) :void)

(cffi:defcfun ("igLogText" igLogText) :void
  (fmt :string)
  cl:&rest)

(cffi:defcfun ("igBeginDragDropSource" igBeginDragDropSource) :pointer
  (flags :int)
  (mouse_button :int))

(cffi:defcfun ("igSetDragDropPayload" igSetDragDropPayload) :pointer
  (type :string)
  (data :pointer)
  (size :pointer)
  (cond :int))

(cffi:defcfun ("igEndDragDropSource" igEndDragDropSource) :void)

(cffi:defcfun ("igBeginDragDropTarget" igBeginDragDropTarget) :pointer)

(cffi:defcfun ("igAcceptDragDropPayload" igAcceptDragDropPayload) :pointer
  (type :string)
  (flags :int))

(cffi:defcfun ("igEndDragDropTarget" igEndDragDropTarget) :void)

(cffi:defcfun ("igPushClipRect" igPushClipRect) :void
  (clip_rect_min (:struct ImVec2))
  (clip_rect_max (:struct ImVec2))
  (intersect_with_current_clip_rect :pointer))

(cffi:defcfun ("igPopClipRect" igPopClipRect) :void)

(cffi:defcfun ("igStyleColorsClassic" igStyleColorsClassic) :void
  (dst :pointer))

(cffi:defcfun ("igStyleColorsDark" igStyleColorsDark) :void
  (dst :pointer))

(cffi:defcfun ("igStyleColorsLight" igStyleColorsLight) :void
  (dst :pointer))

(cffi:defcfun ("igSetItemDefaultFocus" igSetItemDefaultFocus) :void)

(cffi:defcfun ("igSetKeyboardFocusHere" igSetKeyboardFocusHere) :void
  (offset :int))

(cffi:defcfun ("igIsItemHovered" igIsItemHovered) :pointer
  (flags :int))

(cffi:defcfun ("igIsItemActive" igIsItemActive) :pointer)

(cffi:defcfun ("igIsItemClicked" igIsItemClicked) :pointer
  (mouse_button :int))

(cffi:defcfun ("igIsItemVisible" igIsItemVisible) :pointer)

(cffi:defcfun ("igIsAnyItemHovered" igIsAnyItemHovered) :pointer)

(cffi:defcfun ("igIsAnyItemActive" igIsAnyItemActive) :pointer)

(cffi:defcfun ("igGetItemRectMin" igGetItemRectMin) :void
  (pOut :pointer))

(cffi:defcfun ("igGetItemRectMax" igGetItemRectMax) :void
  (pOut :pointer))

(cffi:defcfun ("igGetItemRectSize" igGetItemRectSize) :void
  (pOut :pointer))

(cffi:defcfun ("igSetItemAllowOverlap" igSetItemAllowOverlap) :void)

(cffi:defcfun ("igIsWindowFocused" igIsWindowFocused) :pointer
  (flags :int))

(cffi:defcfun ("igIsWindowHovered" igIsWindowHovered) :pointer
  (falgs :int))

(cffi:defcfun ("igIsAnyWindowFocused" igIsAnyWindowFocused) :pointer)

(cffi:defcfun ("igIsAnyWindowHovered" igIsAnyWindowHovered) :pointer)

(cffi:defcfun ("igIsRectVisible" igIsRectVisible) :pointer
  (item_size (:struct ImVec2)))

(cffi:defcfun ("igIsRectVisible2" igIsRectVisible2) :pointer
  (rect_min :pointer)
  (rect_max :pointer))

(cffi:defcfun ("igGetTime" igGetTime) :float)

(cffi:defcfun ("igGetFrameCount" igGetFrameCount) :int)

(cffi:defcfun ("igGetOverlayDrawList" igGetOverlayDrawList) :pointer)

(cffi:defcfun ("igGetDrawListSharedData" igGetDrawListSharedData) :pointer)

(cffi:defcfun ("igGetStyleColorName" igGetStyleColorName) :string
  (idx :int))

(cffi:defcfun ("igCalcItemRectClosestPoint" igCalcItemRectClosestPoint) :void
  (pOut :pointer)
  (pos (:struct ImVec2))
  (on_edge :pointer)
  (outward :float))

(cffi:defcfun ("igCalcTextSize" igCalcTextSize) :void
  (pOut :pointer)
  (text :string)
  (text_end :string)
  (hide_text_after_double_hash :pointer)
  (wrap_width :float))

(cffi:defcfun ("igCalcListClipping" igCalcListClipping) :void
  (items_count :int)
  (items_height :float)
  (out_items_display_start :pointer)
  (out_items_display_end :pointer))

(cffi:defcfun ("igBeginChildFrame" igBeginChildFrame) :pointer
  (id :unsigned-int)
  (size (:struct ImVec2))
  (extra_flags :int))

(cffi:defcfun ("igEndChildFrame" igEndChildFrame) :void)

(cffi:defcfun ("igColorConvertU32ToFloat4" igColorConvertU32ToFloat4) :void
  (pOut :pointer)
  (in :unsigned-int))

(cffi:defcfun ("igColorConvertFloat4ToU32" igColorConvertFloat4ToU32) :unsigned-int
  (in (:struct ImVec4)))

(cffi:defcfun ("igColorConvertRGBtoHSV" igColorConvertRGBtoHSV) :void
  (r :float)
  (g :float)
  (b :float)
  (out_h :pointer)
  (out_s :pointer)
  (out_v :pointer))

(cffi:defcfun ("igColorConvertHSVtoRGB" igColorConvertHSVtoRGB) :void
  (h :float)
  (s :float)
  (v :float)
  (out_r :pointer)
  (out_g :pointer)
  (out_b :pointer))

(cffi:defcfun ("igGetKeyIndex" igGetKeyIndex) :int
  (imgui_key :int))

(cffi:defcfun ("igIsKeyDown" igIsKeyDown) :pointer
  (user_key_index :int))

(cffi:defcfun ("igIsKeyPressed" igIsKeyPressed) :pointer
  (user_key_index :int)
  (repeat :pointer))

(cffi:defcfun ("igIsKeyReleased" igIsKeyReleased) :pointer
  (user_key_index :int))

(cffi:defcfun ("igGetKeyPressedAmount" igGetKeyPressedAmount) :int
  (key_index :int)
  (repeat_delay :float)
  (rate :float))

(cffi:defcfun ("igIsMouseDown" igIsMouseDown) :pointer
  (button :int))

(cffi:defcfun ("igIsMouseClicked" igIsMouseClicked) :pointer
  (button :int)
  (repeat :pointer))

(cffi:defcfun ("igIsMouseDoubleClicked" igIsMouseDoubleClicked) :pointer
  (button :int))

(cffi:defcfun ("igIsMouseReleased" igIsMouseReleased) :pointer
  (button :int))

(cffi:defcfun ("igIsMouseDragging" igIsMouseDragging) :pointer
  (button :int)
  (lock_threshold :float))

(cffi:defcfun ("igIsMouseHoveringRect" igIsMouseHoveringRect) :pointer
  (r_min (:struct ImVec2))
  (r_max (:struct ImVec2))
  (clip :pointer))

(cffi:defcfun ("igIsMousePosValid" igIsMousePosValid) :pointer
  (mouse_pos :pointer))

(cffi:defcfun ("igGetMousePos" igGetMousePos) :void
  (pOut :pointer))

(cffi:defcfun ("igGetMousePosOnOpeningCurrentPopup" igGetMousePosOnOpeningCurrentPopup) :void
  (pOut :pointer))

(cffi:defcfun ("igGetMouseDragDelta" igGetMouseDragDelta) :void
  (pOut :pointer)
  (button :int)
  (lock_threshold :float))

(cffi:defcfun ("igResetMouseDragDelta" igResetMouseDragDelta) :void
  (button :int))

(cffi:defcfun ("igGetMouseCursor" igGetMouseCursor) :int)

(cffi:defcfun ("igSetMouseCursor" igSetMouseCursor) :void
  (type :int))

(cffi:defcfun ("igCaptureKeyboardFromApp" igCaptureKeyboardFromApp) :void
  (capture :pointer))

(cffi:defcfun ("igCaptureMouseFromApp" igCaptureMouseFromApp) :void
  (capture :pointer))

(cffi:defcfun ("igMemAlloc" igMemAlloc) :pointer
  (sz :pointer))

(cffi:defcfun ("igMemFree" igMemFree) :void
  (ptr :pointer))

(cffi:defcfun ("igGetClipboardText" igGetClipboardText) :string)

(cffi:defcfun ("igSetClipboardText" igSetClipboardText) :void
  (text :string))

(cffi:defcfun ("igGetVersion" igGetVersion) :string)

(cffi:defcfun ("igCreateContext" igCreateContext) :pointer
  (malloc_fn :pointer)
  (free_fn :pointer))

(cffi:defcfun ("igDestroyContext" igDestroyContext) :void
  (ctx :pointer))

(cffi:defcfun ("igGetCurrentContext" igGetCurrentContext) :pointer)

(cffi:defcfun ("igSetCurrentContext" igSetCurrentContext) :void
  (ctx :pointer))

(cffi:defcfun ("ImFontConfig_DefaultConstructor" ImFontConfig_DefaultConstructor) :void
  (config :pointer))

(cffi:defcfun ("ImGuiIO_AddInputCharacter" ImGuiIO_AddInputCharacter) :void
  (c :unsigned-short))

(cffi:defcfun ("ImGuiIO_AddInputCharactersUTF8" ImGuiIO_AddInputCharactersUTF8) :void
  (utf8_chars :string))

(cffi:defcfun ("ImGuiIO_ClearInputCharacters" ImGuiIO_ClearInputCharacters) :void)

(cffi:defcfun ("ImGuiTextFilter_Create" ImGuiTextFilter_Create) :pointer
  (default_filter :string))

(cffi:defcfun ("ImGuiTextFilter_Destroy" ImGuiTextFilter_Destroy) :void
  (filter :pointer))

(cffi:defcfun ("ImGuiTextFilter_Clear" ImGuiTextFilter_Clear) :void
  (filter :pointer))

(cffi:defcfun ("ImGuiTextFilter_Draw" ImGuiTextFilter_Draw) :pointer
  (filter :pointer)
  (label :string)
  (width :float))

(cffi:defcfun ("ImGuiTextFilter_PassFilter" ImGuiTextFilter_PassFilter) :pointer
  (filter :pointer)
  (text :string)
  (text_end :string))

(cffi:defcfun ("ImGuiTextFilter_IsActive" ImGuiTextFilter_IsActive) :pointer
  (filter :pointer))

(cffi:defcfun ("ImGuiTextFilter_Build" ImGuiTextFilter_Build) :void
  (filter :pointer))

(cffi:defcfun ("ImGuiTextFilter_GetInputBuf" ImGuiTextFilter_GetInputBuf) :string
  (filter :pointer))

(cffi:defcfun ("ImGuiTextBuffer_Create" ImGuiTextBuffer_Create) :pointer)

(cffi:defcfun ("ImGuiTextBuffer_Destroy" ImGuiTextBuffer_Destroy) :void
  (buffer :pointer))

(cffi:defcfun ("ImGuiTextBuffer_index" ImGuiTextBuffer_index) :char
  (buffer :pointer)
  (i :int))

(cffi:defcfun ("ImGuiTextBuffer_begin" ImGuiTextBuffer_begin) :string
  (buffer :pointer))

(cffi:defcfun ("ImGuiTextBuffer_end" ImGuiTextBuffer_end) :string
  (buffer :pointer))

(cffi:defcfun ("ImGuiTextBuffer_size" ImGuiTextBuffer_size) :int
  (buffer :pointer))

(cffi:defcfun ("ImGuiTextBuffer_empty" ImGuiTextBuffer_empty) :pointer
  (buffer :pointer))

(cffi:defcfun ("ImGuiTextBuffer_clear" ImGuiTextBuffer_clear) :void
  (buffer :pointer))

(cffi:defcfun ("ImGuiTextBuffer_c_str" ImGuiTextBuffer_c_str) :string
  (buffer :pointer))

(cffi:defcfun ("ImGuiTextBuffer_appendf" ImGuiTextBuffer_appendf) :void
  (buffer :pointer)
  (fmt :string)
  cl:&rest)

(cffi:defcfun ("ImGuiTextBuffer_appendfv" ImGuiTextBuffer_appendfv) :void
  (buffer :pointer)
  (fmt :string)
  (args :pointer))

(cffi:defcfun ("ImGuiStorage_Create" ImGuiStorage_Create) :pointer)

(cffi:defcfun ("ImGuiStorage_Destroy" ImGuiStorage_Destroy) :void
  (storage :pointer))

(cffi:defcfun ("ImGuiStorage_GetInt" ImGuiStorage_GetInt) :int
  (storage :pointer)
  (key :unsigned-int)
  (default_val :int))

(cffi:defcfun ("ImGuiStorage_SetInt" ImGuiStorage_SetInt) :void
  (storage :pointer)
  (key :unsigned-int)
  (val :int))

(cffi:defcfun ("ImGuiStorage_GetBool" ImGuiStorage_GetBool) :pointer
  (storage :pointer)
  (key :unsigned-int)
  (default_val :pointer))

(cffi:defcfun ("ImGuiStorage_SetBool" ImGuiStorage_SetBool) :void
  (storage :pointer)
  (key :unsigned-int)
  (val :pointer))

(cffi:defcfun ("ImGuiStorage_GetFloat" ImGuiStorage_GetFloat) :float
  (storage :pointer)
  (key :unsigned-int)
  (default_val :float))

(cffi:defcfun ("ImGuiStorage_SetFloat" ImGuiStorage_SetFloat) :void
  (storage :pointer)
  (key :unsigned-int)
  (val :float))

(cffi:defcfun ("ImGuiStorage_GetVoidPtr" ImGuiStorage_GetVoidPtr) :pointer
  (storage :pointer)
  (key :unsigned-int))

(cffi:defcfun ("ImGuiStorage_SetVoidPtr" ImGuiStorage_SetVoidPtr) :void
  (storage :pointer)
  (key :unsigned-int)
  (val :pointer))

(cffi:defcfun ("ImGuiStorage_GetIntRef" ImGuiStorage_GetIntRef) :pointer
  (storage :pointer)
  (key :unsigned-int)
  (default_val :int))

(cffi:defcfun ("ImGuiStorage_GetBoolRef" ImGuiStorage_GetBoolRef) :pointer
  (storage :pointer)
  (key :unsigned-int)
  (default_val :pointer))

(cffi:defcfun ("ImGuiStorage_GetFloatRef" ImGuiStorage_GetFloatRef) :pointer
  (storage :pointer)
  (key :unsigned-int)
  (default_val :float))

(cffi:defcfun ("ImGuiStorage_GetVoidPtrRef" ImGuiStorage_GetVoidPtrRef) :pointer
  (storage :pointer)
  (key :unsigned-int)
  (default_val :pointer))

(cffi:defcfun ("ImGuiStorage_SetAllInt" ImGuiStorage_SetAllInt) :void
  (storage :pointer)
  (val :int))

(cffi:defcfun ("ImGuiTextEditCallbackData_DeleteChars" ImGuiTextEditCallbackData_DeleteChars) :void
  (data :pointer)
  (pos :int)
  (bytes_count :int))

(cffi:defcfun ("ImGuiTextEditCallbackData_InsertChars" ImGuiTextEditCallbackData_InsertChars) :void
  (data :pointer)
  (pos :int)
  (text :string)
  (text_end :string))

(cffi:defcfun ("ImGuiTextEditCallbackData_HasSelection" ImGuiTextEditCallbackData_HasSelection) :pointer
  (data :pointer))

(cffi:defcfun ("ImGuiListClipper_Step" ImGuiListClipper_Step) :pointer
  (clipper :pointer))

(cffi:defcfun ("ImGuiListClipper_Begin" ImGuiListClipper_Begin) :void
  (clipper :pointer)
  (count :int)
  (items_height :float))

(cffi:defcfun ("ImGuiListClipper_End" ImGuiListClipper_End) :void
  (clipper :pointer))

(cffi:defcfun ("ImGuiListClipper_GetDisplayStart" ImGuiListClipper_GetDisplayStart) :int
  (clipper :pointer))

(cffi:defcfun ("ImGuiListClipper_GetDisplayEnd" ImGuiListClipper_GetDisplayEnd) :int
  (clipper :pointer))

(cffi:defcfun ("ImDrawList_GetVertexBufferSize" ImDrawList_GetVertexBufferSize) :int
  (list :pointer))

(cffi:defcfun ("ImDrawList_GetVertexPtr" ImDrawList_GetVertexPtr) :pointer
  (list :pointer)
  (n :int))

(cffi:defcfun ("ImDrawList_GetIndexBufferSize" ImDrawList_GetIndexBufferSize) :int
  (list :pointer))

(cffi:defcfun ("ImDrawList_GetIndexPtr" ImDrawList_GetIndexPtr) :pointer
  (list :pointer)
  (n :int))

(cffi:defcfun ("ImDrawList_GetCmdSize" ImDrawList_GetCmdSize) :int
  (list :pointer))

(cffi:defcfun ("ImDrawList_GetCmdPtr" ImDrawList_GetCmdPtr) :pointer
  (list :pointer)
  (n :int))

(cffi:defcfun ("ImDrawList_Clear" ImDrawList_Clear) :void
  (list :pointer))

(cffi:defcfun ("ImDrawList_ClearFreeMemory" ImDrawList_ClearFreeMemory) :void
  (list :pointer))

(cffi:defcfun ("ImDrawList_PushClipRect" ImDrawList_PushClipRect) :void
  (list :pointer)
  (clip_rect_min (:struct ImVec2))
  (clip_rect_max (:struct ImVec2))
  (intersect_with_current_clip_rect :pointer))

(cffi:defcfun ("ImDrawList_PushClipRectFullScreen" ImDrawList_PushClipRectFullScreen) :void
  (list :pointer))

(cffi:defcfun ("ImDrawList_PopClipRect" ImDrawList_PopClipRect) :void
  (list :pointer))

(cffi:defcfun ("ImDrawList_PushTextureID" ImDrawList_PushTextureID) :void
  (list :pointer)
  (texture_id :pointer))

(cffi:defcfun ("ImDrawList_PopTextureID" ImDrawList_PopTextureID) :void
  (list :pointer))

(cffi:defcfun ("ImDrawList_GetClipRectMin" ImDrawList_GetClipRectMin) :void
  (pOut :pointer)
  (list :pointer))

(cffi:defcfun ("ImDrawList_GetClipRectMax" ImDrawList_GetClipRectMax) :void
  (pOut :pointer)
  (list :pointer))

(cffi:defcfun ("ImDrawList_AddLine" ImDrawList_AddLine) :void
  (list :pointer)
  (a (:struct ImVec2))
  (b (:struct ImVec2))
  (col :unsigned-int)
  (thickness :float))

(cffi:defcfun ("ImDrawList_AddRect" ImDrawList_AddRect) :void
  (list :pointer)
  (a (:struct ImVec2))
  (b (:struct ImVec2))
  (col :unsigned-int)
  (rounding :float)
  (rounding_corners_flags :int)
  (thickness :float))

(cffi:defcfun ("ImDrawList_AddRectFilled" ImDrawList_AddRectFilled) :void
  (list :pointer)
  (a (:struct ImVec2))
  (b (:struct ImVec2))
  (col :unsigned-int)
  (rounding :float)
  (rounding_corners_flags :int))

(cffi:defcfun ("ImDrawList_AddRectFilledMultiColor" ImDrawList_AddRectFilledMultiColor) :void
  (list :pointer)
  (a (:struct ImVec2))
  (b (:struct ImVec2))
  (col_upr_left :unsigned-int)
  (col_upr_right :unsigned-int)
  (col_bot_right :unsigned-int)
  (col_bot_left :unsigned-int))

(cffi:defcfun ("ImDrawList_AddQuad" ImDrawList_AddQuad) :void
  (list :pointer)
  (a (:struct ImVec2))
  (b (:struct ImVec2))
  (c (:struct ImVec2))
  (d (:struct ImVec2))
  (col :unsigned-int)
  (thickness :float))

(cffi:defcfun ("ImDrawList_AddQuadFilled" ImDrawList_AddQuadFilled) :void
  (list :pointer)
  (a (:struct ImVec2))
  (b (:struct ImVec2))
  (c (:struct ImVec2))
  (d (:struct ImVec2))
  (col :unsigned-int))

(cffi:defcfun ("ImDrawList_AddTriangle" ImDrawList_AddTriangle) :void
  (list :pointer)
  (a (:struct ImVec2))
  (b (:struct ImVec2))
  (c (:struct ImVec2))
  (col :unsigned-int)
  (thickness :float))

(cffi:defcfun ("ImDrawList_AddTriangleFilled" ImDrawList_AddTriangleFilled) :void
  (list :pointer)
  (a (:struct ImVec2))
  (b (:struct ImVec2))
  (c (:struct ImVec2))
  (col :unsigned-int))

(cffi:defcfun ("ImDrawList_AddCircle" ImDrawList_AddCircle) :void
  (list :pointer)
  (centre (:struct ImVec2))
  (radius :float)
  (col :unsigned-int)
  (num_segments :int)
  (thickness :float))

(cffi:defcfun ("ImDrawList_AddCircleFilled" ImDrawList_AddCircleFilled) :void
  (list :pointer)
  (centre (:struct ImVec2))
  (radius :float)
  (col :unsigned-int)
  (num_segments :int))

(cffi:defcfun ("ImDrawList_AddText" ImDrawList_AddText) :void
  (list :pointer)
  (pos (:struct ImVec2))
  (col :unsigned-int)
  (text_begin :string)
  (text_end :string))

(cffi:defcfun ("ImDrawList_AddTextExt" ImDrawList_AddTextExt) :void
  (list :pointer)
  (font :pointer)
  (font_size :float)
  (pos (:struct ImVec2))
  (col :unsigned-int)
  (text_begin :string)
  (text_end :string)
  (wrap_width :float)
  (cpu_fine_clip_rect :pointer))

(cffi:defcfun ("ImDrawList_AddImage" ImDrawList_AddImage) :void
  (list :pointer)
  (user_texture_id :pointer)
  (a (:struct ImVec2))
  (b (:struct ImVec2))
  (uv_a (:struct ImVec2))
  (uv_b (:struct ImVec2))
  (col :unsigned-int))

(cffi:defcfun ("ImDrawList_AddImageQuad" ImDrawList_AddImageQuad) :void
  (list :pointer)
  (user_texture_id :pointer)
  (a (:struct ImVec2))
  (b (:struct ImVec2))
  (c (:struct ImVec2))
  (d (:struct ImVec2))
  (uv_a (:struct ImVec2))
  (uv_b (:struct ImVec2))
  (uv_c (:struct ImVec2))
  (uv_d (:struct ImVec2))
  (col :unsigned-int))

(cffi:defcfun ("ImDrawList_AddImageRounded" ImDrawList_AddImageRounded) :void
  (list :pointer)
  (user_texture_id :pointer)
  (a (:struct ImVec2))
  (b (:struct ImVec2))
  (uv_a (:struct ImVec2))
  (uv_b (:struct ImVec2))
  (col :unsigned-int)
  (rounding :float)
  (rounding_corners :int))

(cffi:defcfun ("ImDrawList_AddPolyline" ImDrawList_AddPolyline) :void
  (list :pointer)
  (points :pointer)
  (num_points :int)
  (col :unsigned-int)
  (closed :pointer)
  (thickness :float))

(cffi:defcfun ("ImDrawList_AddConvexPolyFilled" ImDrawList_AddConvexPolyFilled) :void
  (list :pointer)
  (points :pointer)
  (num_points :int)
  (col :unsigned-int))

(cffi:defcfun ("ImDrawList_AddBezierCurve" ImDrawList_AddBezierCurve) :void
  (list :pointer)
  (pos0 (:struct ImVec2))
  (cp0 (:struct ImVec2))
  (cp1 (:struct ImVec2))
  (pos1 (:struct ImVec2))
  (col :unsigned-int)
  (thickness :float)
  (num_segments :int))

(cffi:defcfun ("ImDrawList_PathClear" ImDrawList_PathClear) :void
  (list :pointer))

(cffi:defcfun ("ImDrawList_PathLineTo" ImDrawList_PathLineTo) :void
  (list :pointer)
  (pos (:struct ImVec2)))

(cffi:defcfun ("ImDrawList_PathLineToMergeDuplicate" ImDrawList_PathLineToMergeDuplicate) :void
  (list :pointer)
  (pos (:struct ImVec2)))

(cffi:defcfun ("ImDrawList_PathFillConvex" ImDrawList_PathFillConvex) :void
  (list :pointer)
  (col :unsigned-int))

(cffi:defcfun ("ImDrawList_PathStroke" ImDrawList_PathStroke) :void
  (list :pointer)
  (col :unsigned-int)
  (closed :pointer)
  (thickness :float))

(cffi:defcfun ("ImDrawList_PathArcTo" ImDrawList_PathArcTo) :void
  (list :pointer)
  (centre (:struct ImVec2))
  (radius :float)
  (a_min :float)
  (a_max :float)
  (num_segments :int))

(cffi:defcfun ("ImDrawList_PathArcToFast" ImDrawList_PathArcToFast) :void
  (list :pointer)
  (centre (:struct ImVec2))
  (radius :float)
  (a_min_of_12 :int)
  (a_max_of_12 :int))

(cffi:defcfun ("ImDrawList_PathBezierCurveTo" ImDrawList_PathBezierCurveTo) :void
  (list :pointer)
  (p1 (:struct ImVec2))
  (p2 (:struct ImVec2))
  (p3 (:struct ImVec2))
  (num_segments :int))

(cffi:defcfun ("ImDrawList_PathRect" ImDrawList_PathRect) :void
  (list :pointer)
  (rect_min (:struct ImVec2))
  (rect_max (:struct ImVec2))
  (rounding :float)
  (rounding_corners_flags :int))

(cffi:defcfun ("ImDrawList_ChannelsSplit" ImDrawList_ChannelsSplit) :void
  (list :pointer)
  (channels_count :int))

(cffi:defcfun ("ImDrawList_ChannelsMerge" ImDrawList_ChannelsMerge) :void
  (list :pointer))

(cffi:defcfun ("ImDrawList_ChannelsSetCurrent" ImDrawList_ChannelsSetCurrent) :void
  (list :pointer)
  (channel_index :int))

(cffi:defcfun ("ImDrawList_AddCallback" ImDrawList_AddCallback) :void
  (list :pointer)
  (callback :pointer)
  (callback_data :pointer))

(cffi:defcfun ("ImDrawList_AddDrawCmd" ImDrawList_AddDrawCmd) :void
  (list :pointer))

(cffi:defcfun ("ImDrawList_PrimReserve" ImDrawList_PrimReserve) :void
  (list :pointer)
  (idx_count :int)
  (vtx_count :int))

(cffi:defcfun ("ImDrawList_PrimRect" ImDrawList_PrimRect) :void
  (list :pointer)
  (a (:struct ImVec2))
  (b (:struct ImVec2))
  (col :unsigned-int))

(cffi:defcfun ("ImDrawList_PrimRectUV" ImDrawList_PrimRectUV) :void
  (list :pointer)
  (a (:struct ImVec2))
  (b (:struct ImVec2))
  (uv_a (:struct ImVec2))
  (uv_b (:struct ImVec2))
  (col :unsigned-int))

(cffi:defcfun ("ImDrawList_PrimQuadUV" ImDrawList_PrimQuadUV) :void
  (list :pointer)
  (a (:struct ImVec2))
  (b (:struct ImVec2))
  (c (:struct ImVec2))
  (d (:struct ImVec2))
  (uv_a (:struct ImVec2))
  (uv_b (:struct ImVec2))
  (uv_c (:struct ImVec2))
  (uv_d (:struct ImVec2))
  (col :unsigned-int))

(cffi:defcfun ("ImDrawList_PrimWriteVtx" ImDrawList_PrimWriteVtx) :void
  (list :pointer)
  (pos (:struct ImVec2))
  (uv (:struct ImVec2))
  (col :unsigned-int))

(cffi:defcfun ("ImDrawList_PrimWriteIdx" ImDrawList_PrimWriteIdx) :void
  (list :pointer)
  (idx :unsigned-short))

(cffi:defcfun ("ImDrawList_PrimVtx" ImDrawList_PrimVtx) :void
  (list :pointer)
  (pos (:struct ImVec2))
  (uv (:struct ImVec2))
  (col :unsigned-int))

(cffi:defcfun ("ImDrawList_UpdateClipRect" ImDrawList_UpdateClipRect) :void
  (list :pointer))

(cffi:defcfun ("ImDrawList_UpdateTextureID" ImDrawList_UpdateTextureID) :void
  (list :pointer))

(cffi:defcfun ("ImDrawData_DeIndexAllBuffers" ImDrawData_DeIndexAllBuffers) :void
  (drawData :pointer))

(cffi:defcfun ("ImDrawData_ScaleClipRects" ImDrawData_ScaleClipRects) :void
  (drawData :pointer)
  (sc (:struct ImVec2)))

(cffi:defcfun ("ImFontAtlas_GetTexDataAsRGBA32" ImFontAtlas_GetTexDataAsRGBA32) :void
  (atlas :pointer)
  (out_pixels :pointer)
  (out_width :pointer)
  (out_height :pointer)
  (out_bytes_per_pixel :pointer))

(cffi:defcfun ("ImFontAtlas_GetTexDataAsAlpha8" ImFontAtlas_GetTexDataAsAlpha8) :void
  (atlas :pointer)
  (out_pixels :pointer)
  (out_width :pointer)
  (out_height :pointer)
  (out_bytes_per_pixel :pointer))

(cffi:defcfun ("ImFontAtlas_SetTexID" ImFontAtlas_SetTexID) :void
  (atlas :pointer)
  (id :pointer))

(cffi:defcfun ("ImFontAtlas_AddFont" ImFontAtlas_AddFont) :pointer
  (atlas :pointer)
  (font_cfg :pointer))

(cffi:defcfun ("ImFontAtlas_AddFontDefault" ImFontAtlas_AddFontDefault) :pointer
  (atlas :pointer)
  (font_cfg :pointer))

(cffi:defcfun ("ImFontAtlas_AddFontFromFileTTF" ImFontAtlas_AddFontFromFileTTF) :pointer
  (atlas :pointer)
  (filename :string)
  (size_pixels :float)
  (font_cfg :pointer)
  (glyph_ranges :pointer))

(cffi:defcfun ("ImFontAtlas_AddFontFromMemoryTTF" ImFontAtlas_AddFontFromMemoryTTF) :pointer
  (atlas :pointer)
  (font_data :pointer)
  (font_size :int)
  (size_pixels :float)
  (font_cfg :pointer)
  (glyph_ranges :pointer))

(cffi:defcfun ("ImFontAtlas_AddFontFromMemoryCompressedTTF" ImFontAtlas_AddFontFromMemoryCompressedTTF) :pointer
  (atlas :pointer)
  (compressed_font_data :pointer)
  (compressed_font_size :int)
  (size_pixels :float)
  (font_cfg :pointer)
  (glyph_ranges :pointer))

(cffi:defcfun ("ImFontAtlas_AddFontFromMemoryCompressedBase85TTF" ImFontAtlas_AddFontFromMemoryCompressedBase85TTF) :pointer
  (atlas :pointer)
  (compressed_font_data_base85 :string)
  (size_pixels :float)
  (font_cfg :pointer)
  (glyph_ranges :pointer))

(cffi:defcfun ("ImFontAtlas_ClearTexData" ImFontAtlas_ClearTexData) :void
  (atlas :pointer))

(cffi:defcfun ("ImFontAtlas_Clear" ImFontAtlas_Clear) :void
  (atlas :pointer))

(cffi:defcfun ("ImFontAtlas_GetGlyphRangesDefault" ImFontAtlas_GetGlyphRangesDefault) :pointer
  (atlas :pointer))

(cffi:defcfun ("ImFontAtlas_GetGlyphRangesKorean" ImFontAtlas_GetGlyphRangesKorean) :pointer
  (atlas :pointer))

(cffi:defcfun ("ImFontAtlas_GetGlyphRangesJapanese" ImFontAtlas_GetGlyphRangesJapanese) :pointer
  (atlas :pointer))

(cffi:defcfun ("ImFontAtlas_GetGlyphRangesChinese" ImFontAtlas_GetGlyphRangesChinese) :pointer
  (atlas :pointer))

(cffi:defcfun ("ImFontAtlas_GetGlyphRangesCyrillic" ImFontAtlas_GetGlyphRangesCyrillic) :pointer
  (atlas :pointer))

(cffi:defcfun ("ImFontAtlas_GetGlyphRangesThai" ImFontAtlas_GetGlyphRangesThai) :pointer
  (atlas :pointer))

(cffi:defcfun ("ImFontAtlas_GetTexID" ImFontAtlas_GetTexID) :pointer
  (atlas :pointer))

(cffi:defcfun ("ImFontAtlas_GetTexPixelsAlpha8" ImFontAtlas_GetTexPixelsAlpha8) :pointer
  (atlas :pointer))

(cffi:defcfun ("ImFontAtlas_GetTexPixelsRGBA32" ImFontAtlas_GetTexPixelsRGBA32) :pointer
  (atlas :pointer))

(cffi:defcfun ("ImFontAtlas_GetTexWidth" ImFontAtlas_GetTexWidth) :int
  (atlas :pointer))

(cffi:defcfun ("ImFontAtlas_GetTexHeight" ImFontAtlas_GetTexHeight) :int
  (atlas :pointer))

(cffi:defcfun ("ImFontAtlas_GetTexDesiredWidth" ImFontAtlas_GetTexDesiredWidth) :int
  (atlas :pointer))

(cffi:defcfun ("ImFontAtlas_SetTexDesiredWidth" ImFontAtlas_SetTexDesiredWidth) :void
  (atlas :pointer)
  (TexDesiredWidth_ :int))

(cffi:defcfun ("ImFontAtlas_GetTexGlyphPadding" ImFontAtlas_GetTexGlyphPadding) :int
  (atlas :pointer))

(cffi:defcfun ("ImFontAtlas_SetTexGlyphPadding" ImFontAtlas_SetTexGlyphPadding) :void
  (atlas :pointer)
  (TexGlyphPadding_ :int))

(cffi:defcfun ("ImFontAtlas_GetTexUvWhitePixel" ImFontAtlas_GetTexUvWhitePixel) :void
  (atlas :pointer)
  (pOut :pointer))

(cffi:defcfun ("ImFontAtlas_Fonts_size" ImFontAtlas_Fonts_size) :int
  (atlas :pointer))

(cffi:defcfun ("ImFontAtlas_Fonts_index" ImFontAtlas_Fonts_index) :pointer
  (atlas :pointer)
  (index :int))

(cffi:defcfun ("ImFont_GetFontSize" ImFont_GetFontSize) :float
  (font :pointer))

(cffi:defcfun ("ImFont_SetFontSize" ImFont_SetFontSize) :void
  (font :pointer)
  (FontSize_ :float))

(cffi:defcfun ("ImFont_GetScale" ImFont_GetScale) :float
  (font :pointer))

(cffi:defcfun ("ImFont_SetScale" ImFont_SetScale) :void
  (font :pointer)
  (Scale_ :float))

(cffi:defcfun ("ImFont_GetDisplayOffset" ImFont_GetDisplayOffset) :void
  (font :pointer)
  (pOut :pointer))

(cffi:defcfun ("ImFont_GetFallbackGlyph" ImFont_GetFallbackGlyph) :pointer
  (font :pointer))

(cffi:defcfun ("ImFont_SetFallbackGlyph" ImFont_SetFallbackGlyph) :void
  (font :pointer)
  (FallbackGlyph_ :pointer))

(cffi:defcfun ("ImFont_GetFallbackAdvanceX" ImFont_GetFallbackAdvanceX) :float
  (font :pointer))

(cffi:defcfun ("ImFont_GetFallbackChar" ImFont_GetFallbackChar) :unsigned-short
  (font :pointer))

(cffi:defcfun ("ImFont_GetConfigDataCount" ImFont_GetConfigDataCount) :short
  (font :pointer))

(cffi:defcfun ("ImFont_GetConfigData" ImFont_GetConfigData) :pointer
  (font :pointer))

(cffi:defcfun ("ImFont_GetContainerAtlas" ImFont_GetContainerAtlas) :pointer
  (font :pointer))

(cffi:defcfun ("ImFont_GetAscent" ImFont_GetAscent) :float
  (font :pointer))

(cffi:defcfun ("ImFont_GetDescent" ImFont_GetDescent) :float
  (font :pointer))

(cffi:defcfun ("ImFont_GetMetricsTotalSurface" ImFont_GetMetricsTotalSurface) :int
  (font :pointer))

(cffi:defcfun ("ImFont_ClearOutputData" ImFont_ClearOutputData) :void
  (font :pointer))

(cffi:defcfun ("ImFont_BuildLookupTable" ImFont_BuildLookupTable) :void
  (font :pointer))

(cffi:defcfun ("ImFont_FindGlyph" ImFont_FindGlyph) :pointer
  (font :pointer)
  (c :unsigned-short))

(cffi:defcfun ("ImFont_SetFallbackChar" ImFont_SetFallbackChar) :void
  (font :pointer)
  (c :unsigned-short))

(cffi:defcfun ("ImFont_GetCharAdvance" ImFont_GetCharAdvance) :float
  (font :pointer)
  (c :unsigned-short))

(cffi:defcfun ("ImFont_IsLoaded" ImFont_IsLoaded) :pointer
  (font :pointer))

(cffi:defcfun ("ImFont_GetDebugName" ImFont_GetDebugName) :string
  (font :pointer))

(cffi:defcfun ("ImFont_CalcTextSizeA" ImFont_CalcTextSizeA) :void
  (font :pointer)
  (pOut :pointer)
  (size :float)
  (max_width :float)
  (wrap_width :float)
  (text_begin :string)
  (text_end :string)
  (remaining :pointer))

(cffi:defcfun ("ImFont_CalcWordWrapPositionA" ImFont_CalcWordWrapPositionA) :string
  (font :pointer)
  (scale :float)
  (text :string)
  (text_end :string)
  (wrap_width :float))

(cffi:defcfun ("ImFont_RenderChar" ImFont_RenderChar) :void
  (font :pointer)
  (draw_list :pointer)
  (size :float)
  (pos (:struct ImVec2))
  (col :unsigned-int)
  (c :unsigned-short))

(cffi:defcfun ("ImFont_RenderText" ImFont_RenderText) :void
  (font :pointer)
  (draw_list :pointer)
  (size :float)
  (pos (:struct ImVec2))
  (col :unsigned-int)
  (clip_rect :pointer)
  (text_begin :string)
  (text_end :string)
  (wrap_width :float)
  (cpu_fine_clip :pointer))

(cffi:defcfun ("ImFont_Glyphs_size" ImFont_Glyphs_size) :int
  (font :pointer))

(cffi:defcfun ("ImFont_Glyphs_index" ImFont_Glyphs_index) :pointer
  (font :pointer)
  (index :int))

(cffi:defcfun ("ImFont_IndexXAdvance_size" ImFont_IndexXAdvance_size) :int
  (font :pointer))

(cffi:defcfun ("ImFont_IndexXAdvance_index" ImFont_IndexXAdvance_index) :float
  (font :pointer)
  (index :int))

(cffi:defcfun ("ImFont_IndexLookup_size" ImFont_IndexLookup_size) :int
  (font :pointer))

(cffi:defcfun ("ImFont_IndexLookup_index" ImFont_IndexLookup_index) :unsigned-short
  (font :pointer)
  (index :int))


